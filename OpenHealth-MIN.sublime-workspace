{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rep",
				"replace"
			],
			[
				"order",
				"order_line"
			],
			[
				"report_",
				"report_ticket_receipt"
			],
			[
				"Re",
				"Regresar"
			],
			[
				"cu",
				"cuo_tot"
			],
			[
				"ame",
				"ame_tot"
			],
			[
				"cash",
				"cash_tot"
			],
			[
				"ca",
				"cash_tot"
			],
			[
				"rec",
				"rec_tot"
			],
			[
				"sale",
				"sale_note"
			],
			[
				"in",
				"invoice"
			],
			[
				"dat",
				"date_order"
			],
			[
				"de",
				"default"
			],
			[
				"ord",
				"orders"
			],
			[
				"a",
				"amount_untaxed"
			],
			[
				"st",
				"state"
			],
			[
				"di",
				"directors"
			],
			[
				"nr",
				"nr_treatments"
			],
			[
				"co",
				"cosmetology"
			],
			[
				"part",
				"partner_id"
			],
			[
				"item",
				"item_ids"
			],
			[
				"oe",
				"oe_right"
			],
			[
				"ope",
				"openhealth"
			],
			[
				"on",
				"onchange_partner_id"
			],
			[
				"x_dat",
				"x_date_created"
			],
			[
				"x_da",
				"x_datetime_created"
			],
			[
				"p",
				"procedures"
			],
			[
				"con",
				"consultation"
			],
			[
				"group",
				"groups"
			],
			[
				"In",
				"Invoices"
			],
			[
				"price",
				"pricelist"
			],
			[
				"produ",
				"product_id"
			],
			[
				"orde",
				"order_line"
			],
			[
				"card",
				"card_id"
			],
			[
				"pa",
				"patient_name"
			],
			[
				"patient",
				"patient_name"
			],
			[
				"par",
				"partner_id"
			],
			[
				"u",
				"uom_id"
			],
			[
				"s",
				"string"
			],
			[
				"ti",
				"ticket_receipt"
			],
			[
				"pro",
				"product_uom"
			],
			[
				"Inven",
				"Inventario"
			],
			[
				"Serv",
				"Servicios"
			],
			[
				"end",
				"appointment_end"
			]
		]
	},
	"buffers":
	[
		{
			"file": "__openerp__.py",
			"settings":
			{
				"buffer_size": 9735,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/patient.py",
			"settings":
			{
				"buffer_size": 19042,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/patients/patient.xml",
			"settings":
			{
				"buffer_size": 11637,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/partner.py",
			"settings":
			{
				"buffer_size": 2205,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/partners/partner.xml",
			"settings":
			{
				"buffer_size": 6083,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Learn\n------\n\nCreated: \t15 sep 2016\nLast mod:\tid. \n\n\n\nShell \n./odoo.py shell -d chavarri-oehealth\n\n\nself\n\nself.name\n\nself.env\n\n\n\ns= self.env['product.template'].search([  ('x_treatment', '=', 'hyaluronic_acid'), ('x_sessions', '=', '1') ])\n\n\n\n\nself.env['stock.picking'].search([('name', 'like', 'J')])\n\nself.env['stock.picking'].search([('name', 'like', 'CC/OUT/00007')])\n\n\n\n\n\n\n\n\nself.env['ir.model.data'].search([('name', 'like', 'J')])\n\nself.env['ir.model.data'].search([('id', '=', 10)])\n\n\n\nself.env['mail.template'].search([('id', '=', 10)])\n\nself.env['mail.template'].search([('name', 'like', 'jx')])\n\n\nself.env['mail.template'].search([('name', '=', 'RFQ - Send by Email - jx')])\n\n\n\n\n\n\n\n\nself.env['openhealth.ticket_invoice']\n\nself.env['openhealth.ticket_invoice'].search([('name', 'like', 'J')])\n\nself.env['openhealth.ticket_invoice'].search([('name', 'like', '8')])\n\n\n\n\n\n\n\n\n\nself.env['purchase.order']\n\nself.env['purchase.order'].search([('name', 'like', 'J')])\n\npo.unlink()\n\n\n\n\n\nself.env['openhealth.quotation'].search([('name', 'like', '')])\n\n\n\n\n\n\n\n\nself.env['res.partner']\n\n\n\n#self.env['res.partner'].mapped('partner_id')\n\n\n\nself.env['res.partner'].search([('name', 'like', 'J')])\n\n\n\n\n\nself.env['product.pricelist'].search([('name', 'like', 'P')])\n\nself.env['product.pricelist'].search([('name', '=', 'Public Pricelist')])\n\n\n\np = self.env['product.pricelist'].search([('name','=', 'VIP'),],limit=1,)\n\no.order_line.create({ 'product_id': 4043, 'order_id': 89, 'name': 'hya_1hr_ref_one_nor' })\n\n\n\np = self.env['product.pricelist'].create({ 'name': 'jx Test 1' })\n\n\nself.env['product.pricelist'].create({ 'name': 'jx Test 1' })\n\n\n\n\nself.env['product.pricelist.item'].search_count([('name', 'like', '')])\nself.env['product.pricelist.item'].search_count([('base', 'like', '')])\n\n\n\n\nself.env['product.pricelist'].search([('name', '=', 'VIP')])\n21\n\nself.env['product.pricelist.item'].create({ 'name': 'jx Test 2' })\n\np = self.env['product.pricelist.item'].create({ 'name': 'jx Test 2', 'pricelist_id': '21' })\n\n\n\n\np = self.env['product.pricelist.item'].create({ 'name': 'jx Test 2', 'pricelist_id': '21', 'product_tmpl_id': '3325' })\n\n\n\n\nself.env['product.template'].search([('x_name_short', '=', 'hac_1hy_rfa_one')])\n3325\n\n\n\n\n\np = self.env['product.pricelist.item'].create({ 'name': 'jx Test 2', 'base': 'pricelist' })\n\n\np = self.env['product.pricelist.item'].create({ 'name': 'jx Test 2', 'base': 'pricelist', 'applied_on': '1_product', 'min_quantity': '1', 'fixed_price': '1200.0' })\n\n\n\n\nself.env['res.users']\nself.env['res.users'].search([('name', 'like', 'J')])\n\n\n\n\n\n\nself.env['res.country'].search([('name', 'like', 'Peru')])\n\n\n\n\n\nhttp://localhost:8069/web#id=12&view_type=form&model=openextension.treatment&menu_id=1314&action=797\nhttp://localhost:8069/web#id=14&view_type=form&model=openextension.treatment&menu_id=1314&action=797\n\n\nself.env['openhealth.learn'].search([('name', 'like', 'B')])\n\nself.env['openhealth.learn'].search([('name', 'like', 'J')]).do_operation()\n\n\nself.env['openhealth.learn'].search([('name', 'like', 'J')]).write({'a': 1, 'b': 2, 'c': 3})\n\nself.env['openhealth.learn'].search([('name', 'like', '')]).write({'a': 1, 'b': 2, 'c': 3})\n\n\nself.env['res.partner'].filtered(\"partner_id.is_company\")\nself.env['res.partner'].filtered(\"company_type.is_company\")\n\n\nself.env['openhealth.learn'].search([('name', 'like', '')]).sorted()\nself.env['openhealth.learn'].search([('name', 'like', '')]).sorted(key=lambda r: r.name)\n\nself.env['openhealth.learn'].search([('name', 'like', '')]).mapped(lambda r: r.a + r.b)\n\n\nself.env['openhealth.learn'].search([('name', 'like', '')]).mapped('name')\n\n\n\nself.env['openhealth.learn'].search([('id','=','1')]).name\n\n\n\n\nenv['res.partner'].sudo().create({'name': \"A Partner\"})\n\n\n\n\nself.env['openhealth.learn'].search([('name', 'like', '')]).search_count()\n\n\n\n\n\n\n\nself.env['oeh.medical.patient'].search([('name', 'like', 'SALMON RAVENNA LAURA YOLANDA')])\n\n\n\n\n\nself.env['oeh.medical.patient'].search([('name', 'like', 'Ja')])\n\nself.env['oeh.medical.patient'].search([('id', '=', '3025')])\n\n\nself.env['oeh.medical.patient'].search([('name', '=', '')])\nself.env['oeh.medical.patient'].search([('name', '=', 'NIZAMA CASTILLO EDICSON JIICHIRO')])\nself.env['oeh.medical.patient'].search([('name', '=', 'REVILLA RONDON Jose Javier')])\n\n\nNIZAMA CASTILLO EDICSON JIICHIRO\nREVILLA RONDON Jose Javier\n\n\n\n\nself.env['oeh.medical.physician'].search([('name', 'like', 'Fe')])\nself.env['oeh.medical.physician'].search([('id', '=', '1')])\n\n\n\n\n\n\n\nself.env['openhealth.service'].search([('name', 'like', 'S')])\n\n\n\n\nself.env['product.template'].search([('x_treatment', 'like', 'laser_co2')])\n\n\n#order='appointment_date desc',\n\n\n\nself.env['product.template'].search([\t('x_treatment', '=', 'laser_co2'),\t('x_zone', '=', 'body_local'),\t('x_pathology', '=', 'acne_sequels_1')])\n\n\nself.env['product.template'].search([('x_treatment', '=', 'laser_co2'),('x_zone', '=', 'body_local'),('list_price', '=', 50)]).name\n\n\n\n\n\n\n\n\nself.env['openhealth.treatment']\n\nself.env['openhealth.treatment'].search([('name', 'like', 'TR000016'),])\n\nt = self.env['openhealth.treatment'].search([('id', '=', '16'),])\n\nt = self.env['openhealth.treatment'].search([('id', '=', '02'),])\n\n\n\n\n\n\n\n\nself.env['product.template']\n\nself.env['product.template'].search([('x_zone', 'like', '1_hypodermic'),])\n\n\n\nself.env['account.invoice.line']\n\n\n\n\nself.env['product.template'].search([('type', 'like', 'service'),])\n\nself.env['product.template'].search([('type', 'like', 'consumable'),])\n\n\n\n\n\nself.env['product.template'].search([('x_treatment', 'like', 'co2'),('x_zone', 'like', 'hands')], limit=1)\n\n\nself.env['product.template'].search([('x_treatment', 'like', 'hyaluronic_acid'),('x_zone', 'like', '1_hypodermic_repair')], limit=1)\n\n\n\np = self.env['product.template'].search([('x_treatment', 'like', 'hyaluronic_acid'),('x_zone', 'like', '1_hypodermic_repair')], limit=1)\n\n\n\np = self.env['product.template'].search([('x_name_short', 'like', 'co2_han_sta'),])\n\n\n\n\n\n\n# not working\nself.env['openhealth.learn'].search([('name', 'like', '')]).filtered(lambda r: r.name == user.name)\n\nopenhealth.learn(1, 2)\n\nself.env['openhealth.learn'].do_operation()\n\nself.env['openhealth.learn'].do_msg()\n\n\n\n\n\n\n\n# Treatment \n\nself.env.ref('base.group_public')\n\nself.env.ref('openextension.treatment')\n\nt = self.env['openextension.treatment'].search([('chief_complaint', 'like', 'acne_active')], limit=1)\n\n\n\nt = self.env['openextension.treatment'].search([\t('chief_complaint', 'like', 'acne_active'), ('patient', 'like', 'Puga')\t])\n\n\nt = self.env['openextension.treatment'].search([\t('chief_complaint', 'like', 'acne_active'), ('patient', 'like', 'Revilla')\t])\n\nt = self.env['openextension.treatment'].search([\t('chief_complaint', 'like', 'acne_active'), ('patient', 'like', 'Revilla')],  order='start_date' )\n\nt = self.env['openextension.treatment'].search([\t('chief_complaint', 'like', 'acne_active'), ('patient', 'like', 'Revilla')],  order='start_date desc' )\n\nt = self.env['openextension.treatment'].search([\t('chief_complaint', 'like', 'acne_active'), ('patient', 'like', 'Revilla')],  order='start_date desc', limit=1 )\n\n\nt = self.env['openextension.treatment'].search([  ('chief_complaint', 'like', 'acne_active'), ('patient', 'like', 'Revilla'),    ],  order='start_date desc', limit=1 )\n\n\n\n\n\n'default_patient': context.get('patient_id', False),\n\n\n\n\n\n\n\nself.env['sale.order']\nself.env['sale.order'].search_count([('name', 'like', '1')])\n\nself.env['sale.order'].search([('name', 'like', '11')]).order_line.search([('name', 'like', 'CO')])\nself.env['sale.order'].search([('name', 'like', '11')]).order_line.search([('id', '=', '3201')])\n\n\n\no = self.env['sale.order'].search([('name', 'like', '103')])\n\no = self.env['sale.order'].search([('name', 'like', '109')])\n\no = self.env['sale.order'].search([('name', 'like', '119')])\n\n\n\n\no = self.env['sale.order'].search([('name', 'like', '182')])\n\no = self.env['sale.order'].search([('name', 'like', '184')])\n\n\no = self.env['sale.order'].search([('name', 'like', '191')])\n\n\n\n\nself.env['sale.order'].search([('name', 'like', '0113')])\n\nself.env['sale.order'].search([('name', 'like', '0113')]).date_order\n\n\nself.env['sale.order'].search([('date_order', 'like', '2017')])\n\n\n\n\n\n\n\n\n\no.order_line.create({ 'product_id': 4043, 'order_id': 89, 'name': 'hya_1hr_ref_one_nor' })\n\no.order_line.create({ 'product_id': 4136, 'order_id': 95, 'name': 'hya_1hr_ref_one_nor' })\n\no.order_line.create({ 'product_id': 4136, 'order_id': 95, 'name': 'ACIDO HIALURONICO - 1 Jeringa - REPAIR - Rejuvenecimiento Facial - 1 - Normal' })\n\n\n\no.order_line.create({ 'product_id': 4190, 'order_id': 105, 'name': 'lep_bac_acn_one_nor' })\n\n\n\n\n\n\nself.env['product.template'].search([('x_name_short', 'like', 'hya_1hr_ref_one_nor'),])\n\np = self.env['product.template'].search([('x_name_short', 'like', 'lep_bac_acn_one_nor')])\n\n\n\npc = self.env['product.template'].search([('x_name_short', 'like', 'co2_nec_sca')])\n\n\n\nself.env['openhealth.consultation'].search([('name', 'like', '93')])\n\nself.env['res.partner'].search([('name','=','Yvan Puga')],limit=1)\n\n\nself.env['openhealth.service.co2'].search([('name', 'like', '93')])\n\n\n\n\n\n\n\n\n\n\nself.env['sale.order'].search([('state', 'like', 'draft')])\n\no = self.env['sale.order'].search([('state', 'like', 'draft')])\n\n\nself.env['sale.order'].search([('customer', 'like', 'J')])\n\n\n\n\n\n\n\n\n\n\n\n\na = self.env['oeh.medical.appointment'].search([('name', 'like', '68')])\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', '26')])\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', '=', '2016-11-26')])\n\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', '26')], limit=1)\n\n\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', '16-11-26')], limit=1)\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', '16-11-26'), ('doctor_id', '=', '1'),])\n\n\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', '16-12-6'), ('doctor', 'like', 'Chavarri'),])\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', '16-12-6'), ('patient', 'like', 'Revilla'),])\n\n\na = self.env['oeh.medical.appointment'].search([ \t('patient', 'like', 'Revilla'),\t\t('doctor', 'like', 'Chavarri'), \t\t])\n\na = self.env['oeh.medical.appointment'].search([ \t('patient', 'like', 'Revilla'),\t\t('doctor', 'like', 'Chavarri'), \t('appointment_date', 'like', '2016-12-06 15:30:00')\t])\n\n\n\n\na = self.env['oeh.medical.appointment'].search([ \t('patient', 'like', 'Revilla'),\t\t('doctor', 'like', 'Chavarri'), \t\t], limit=1)\n\n\na = self.env['oeh.medical.appointment'].search([ \t('patient', 'like', 'Revilla'),\t\t('doctor', 'like', 'Chavarri'), \t('x_type', 'like', 'consultation'), \t\t])\n\na = self.env['oeh.medical.appointment'].search([ \t('patient', 'like', 'Revilla'),\t\t('doctor', 'like', 'Chavarri'), \t('x_type', 'like', 'consultation'), \t\t], order='appointment_date desc', limit=1)\n\n\n\na = self.env['oeh.medical.appointment'].search([ \t('patient', 'like', 'Revilla'),\t\t('doctor', 'like', 'Chavarri'), \t('x_type', 'like', 'consultation'), ('appointment_date', 'like', '2016-12-06 15:30:00')\t\t])\n\n\n\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', appointment_date_str), ('doctor', '=', doctor_name), ('x_type', '=', x_type), ])\n\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', appointment_date_str), ])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t])\n\na = self.env['oeh.medical.appointment'].search([('appointment_date', 'like', '16-12-23'), ])\n\n\n\n\na = self.env['oeh.medical.appointment'].search([ ('patient', 'like', 'REVILLA Javier'),\t('x_therapist', 'like', 'Eulalia'), ('x_type', 'like', 'procedure'), ], order='appointment_date desc', limit=1)\n\n\n\n\na = self.env['oeh.medical.appointment'].search([ ('appointment_date', 'like', '17-03-02'), ('patient', 'like', 'REVILLA Javier'),\t('x_therapist', 'like', 'Eulalia'), ('x_type', 'like', 'procedure'), ], order='appointment_date desc', limit=1)\n\n\na = self.env['oeh.medical.appointment'].search([ ('appointment_date', 'like', '2017-03-02 16:00:00'), ('patient', 'like', 'REVILLA Javier'),\t('x_therapist', 'like', 'Eulalia'), ('x_type', 'like', 'procedure'), ], order='appointment_date desc', limit=1)\n\n\na = self.env['oeh.medical.appointment'].search([ ('appointment_date', 'like', '2017-03-02 '), ('patient', 'like', 'REVILLA Javier'),\t('x_therapist', 'like', 'Eulalia'), ('x_type', 'like', 'procedure'), ], order='appointment_date desc', limit=1)\n\n\na = self.env['oeh.medical.appointment'].search([ ('appointment_date', 'like', '2017-03-02 17:17:36'), ('patient', 'like', 'REVILLA Javier'),\t('x_therapist', 'like', 'Eulalia'), ('x_type', 'like', 'procedure'), ], order='appointment_date desc', limit=1)\n\n\n\n\n\n\n\n\nret = a.write({'consultation': 65,})\n\n\n\n",
			"file": "models/howto/shell.rb",
			"file_size": 12685,
			"file_write_time": 131551721910000000,
			"settings":
			{
				"buffer_size": 12782,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/menus/menus.xml",
			"settings":
			{
				"buffer_size": 11417,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/orders/order.xml",
			"settings":
			{
				"buffer_size": 30157,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/sale_documents/payment_methods.xml",
			"settings":
			{
				"buffer_size": 7192,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/purchase/purchase.xml",
			"settings":
			{
				"buffer_size": 762,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/order.py",
			"settings":
			{
				"buffer_size": 39445,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/stock_picking.py",
			"settings":
			{
				"buffer_size": 440,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/purchase.py",
			"settings":
			{
				"buffer_size": 362,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/sale_documents/receipts.xml",
			"settings":
			{
				"buffer_size": 4764,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/sale_documents/invoices.xml",
			"settings":
			{
				"buffer_size": 1954,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/sale_documents/ticket_invoices.xml",
			"settings":
			{
				"buffer_size": 2100,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/ticket_receipt.py",
			"settings":
			{
				"buffer_size": 794,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/sale_documents/ticket_receipts.xml",
			"settings":
			{
				"buffer_size": 1842,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/receipt.py",
			"settings":
			{
				"buffer_size": 855,
				"line_ending": "Unix"
			}
		},
		{
			"file": "reports/closing.xml",
			"settings":
			{
				"buffer_size": 2712,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"browser",
				"Browse Mode: Right Sidebar"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"python",
				"Build With: Python - Syntax Check"
			],
			[
				"package control:install",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 256.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_receipt.xml",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_invoice.xml",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_sale_proof.xml",
		"/Users/gibil/cellar/github/openhealth/views/products/product.xml",
		"/Users/gibil/cellar/github/openhealth/models/purchase.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/views/purchase/purchase.TRASH.xml",
		"/Users/gibil/cellar/github/openhealth/views/stock/stock.xml",
		"/Users/gibil/cellar/github/openhealth/views/stock/stock_picking.xml",
		"/Users/gibil/cellar/github/openhealth/models/howto/shell.rb",
		"/Users/gibil/cellar/github/openhealth/models/__init__.py",
		"/Users/gibil/cellar/github/openhealth/readme.txt",
		"/Users/gibil/cellar/github/openhealth/data/base_data_users_cash.xml",
		"/Users/gibil/cellar/github/openhealth/security/openhealth_security_oe.xml",
		"/Users/gibil/cellar/github/openhealth/security/openhealth_security_buf.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus_openhealth.xml",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_rec_buffer.xml",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_inv_buffer.xml",
		"/Users/gibil/cellar/github/openhealth/data/base_data_categs.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_co2.xml",
		"/Users/gibil/cellar/github/openhealth/models/sale_proof.py",
		"/Users/gibil/cellar/github/openhealth/views/orders/order.xml",
		"/Users/gibil/cellar/github/openhealth/reports/report_ticket_buffer.xml",
		"/Users/gibil/cellar/github/openhealth/views/orders/order_line.xml",
		"/Users/gibil/cellar/github/openhealth/models/ticket_invoice.py",
		"/Users/gibil/cellar/github/openhealth/reports/patient_controls.xml",
		"/Users/gibil/cellar/github/openhealth/reports/patient.xml",
		"/Users/gibil/cellar/github/openhealth/models/partner.py",
		"/Users/gibil/cellar/github/openhealth/models/order.py",
		"/Users/gibil/cellar/github/openhealth/models/patient.py",
		"/Users/gibil/cellar/github/openhealth/models/service.py",
		"/Users/gibil/cellar/github/openhealth/models/physician.py",
		"/Users/gibil/cellar/github/openhealth/views/sale_documents/payment_methods.xml",
		"/Users/gibil/cellar/github/openhealth/reports/patient_consultation.xml",
		"/Users/gibil/cellar/github/openhealth/data/product_suppliers.xml",
		"/Users/gibil/cellar/github/openhealth/reports/ticket_invoice.xml",
		"/Users/gibil/cellar/github/openhealth/reports/ticket_receipt.xml",
		"/Users/gibil/cellar/github/openhealth/reports/ticket.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session.xml",
		"/Users/gibil/cellar/github/openhealth/views/controls/control.xml",
		"/Users/gibil/cellar/github/openhealth/views/quotations/quotation.xml",
		"/Users/gibil/cellar/github/openhealth/models/quotation.py",
		"/Users/gibil/cellar/github/openhealth/views/partners/partner.xml",
		"/Users/gibil/cellar/github/openhealth/models/card.py",
		"/Users/gibil/cellar/github/openhealth/models/purchase.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment.py",
		"/Users/gibil/cellar/github/openhealth/models/sale_note.py",
		"/Users/gibil/cellar/github/openhealth/models/advertisement.py",
		"/Users/gibil/cellar/github/openhealth/models/ticket_receipt.py",
		"/Users/gibil/cellar/github/openhealth/models/invoice.py",
		"/Users/gibil/cellar/github/openhealth/models/receipt.py",
		"/Users/gibil/cellar/github/openhealth/models/closing.py",
		"/Users/gibil/cellar/github/openhealth/models/control.py",
		"/Users/gibil/cellar/github/openhealth/models/purchase_line_rfq.py",
		"/Users/gibil/cellar/github/openhealth/views/mail/rfq_send.xml",
		"/Users/gibil/cellar/github/openhealth/models/session_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/serv_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/purchase_rfq.py",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient.xml",
		"/Users/gibil/cellar/github/openhealth/views/orders/events.xml",
		"/Users/gibil/cellar/github/openhealth/views/purchase/purchase.xml",
		"/Users/gibil/cellar/github/openhealth/models/base.py",
		"/Users/gibil/cellar/github/openhealth/views/partners/partner_vendor.xml",
		"/Users/gibil/cellar/github/openhealth/models/process.py",
		"/Users/gibil/cellar/github/openhealth/models/session_med.py",
		"/Users/gibil/cellar/github/openhealth/models/evaluation.py",
		"/Users/gibil/cellar/github/openhealth/models/multi_image.py",
		"/Users/gibil/cellar/github/openhealth/models/session.py",
		"/Users/gibil/cellar/github/openhealth/models/image.py",
		"/Users/gibil/cellar/github/openhealth/views/purchase/purchase_rfq.xml",
		"/Users/gibil/cellar/github/openhealth/security/ir.model.access.csv",
		"/Users/gibil/cellar/github/openhealth/models/sale_report.BUF.py",
		"/Users/gibil/cellar/github/openhealth/models/sale_report.py",
		"/Users/gibil/cellar/github/openhealth/data/base_data_users_managers.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus/menus.xml",
		"/Users/gibil/cellar/github/openhealth/views/appointments/appointment.xml",
		"/Users/gibil/cellar/github/openhealth/views/purchase/purchase_po.xml",
		"/Users/gibil/cellar/github/openhealth/models/purchase_po.py",
		"/Users/gibil/cellar/github/openhealth/models/appointment.py",
		"/Users/gibil/cellar/github/openhealth/views/closings/closings.xml",
		"/Users/gibil/cellar/github/openhealth/models/event.py",
		"/Users/gibil/cellar/github/openhealth/views/consultations/consultation.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service.xml",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment.xml",
		"/Users/gibil/cellar/github/openhealth/data/products_pricelist.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_products.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_med.xml",
		"/Users/gibil/cellar/github/openhealth/data/supplier_services.xml",
		"/Users/gibil/cellar/github/openhealth/reports/closing.xml",
		"/Users/gibil/cellar/github/openhealth/security/openhealth_security_readers.xml",
		"/Users/gibil/cellar/github/openhealth/data/products_pricelist.BUF.xml",
		"/Users/gibil/cellar/github/openhealth/models/payment_method.py",
		"/Users/gibil/cellar/github/openhealth/models/payment_method_line.py",
		"/Users/gibil/cellar/github/openhealth/models/ord_vars.py",
		"/Users/gibil/cellar/github/openhealth/data/base_data_users_doctors.xml",
		"/Users/gibil/cellar/github/openhealth/views/cosmetologies/cosmetology.xml",
		"/Users/gibil/cellar/github/openhealth/models/cosmetology.py",
		"/Users/gibil/cellar/github/openhealth/models/consultation_cos.py",
		"/Users/gibil/cellar/github/openhealth/views/cards/card.xml",
		"/Users/gibil/cellar/github/openhealth/models/service_cosmetology.py",
		"/Users/gibil/cellar/github/openhealth/models/service_medical.py",
		"/Users/gibil/cellar/github/openhealth/models/consultation.py",
		"/Users/gibil/cellar/github/openhealth/views/consultations/consultation_cos.xml",
		"/Users/gibil/cellar/github/openhealth/models/counter.py",
		"/Users/gibil/cellar/github/openhealth/models/partner.TRAHS.py",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_cards.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_med_pricelist.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_cos.xml",
		"/Users/gibil/cellar/github/openhealth/data/base_data_physicians.xml",
		"/Users/gibil/cellar/github/openhealth/models/test.py",
		"/Users/gibil/cellar/github/openhealth/models/procedure.py",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_config_manual.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_config_fractional.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_med.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_med.BAK.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session.BK.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_co2_zone.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_co2.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure_sessions.xml",
		"/Users/gibil/cellar/github/openhealth/models/pat_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/product.py",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure_cos_sessions.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure_controls.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_configuration.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_ipl.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_excilite.xml",
		"/Users/gibil/cellar/github/openhealth/views/reports/report_sale_search.xml",
		"/Users/gibil/cellar/github/openhealth/security/ir.model.access.BUF.csv"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"street",
			"partner_id",
			"partner",
			"x_last_name",
			"street",
			"contacts",
			"groups",
			"group",
			"security",
			"street",
			"x_reset",
			"puchase.order",
			"button",
			"purchase",
			"purchase.xml",
			"roots",
			"unlin",
			"ticket",
			"report_ticket",
			"xpath",
			"total_net",
			"total_in_words",
			"website",
			"my_ruc",
			"kausach",
			"order_l",
			"order_line",
			"pathology",
			"test",
			"therapist",
			"col-xs-7",
			"col-xs-5",
			"ruc",
			"TREE",
			"total",
			"my_firm",
			"my_ruc",
			"date",
			"x_type",
			"num2words",
			"my_ruc",
			"order_line",
			"pa_",
			"my_address",
			"my_ruc",
			"dni",
			"x_dni",
			"x_dni = fields",
			"x_dni",
			"my_ruc",
			"ruc",
			"firm",
			"ruc",
			"domain",
			"Many2",
			"many2",
			"firm",
			"company_id",
			"button_cancel",
			"button_draft",
			"nr_tre",
			"receipt",
			"print",
			"family",
			"Sele",
			"family",
			"open_order",
			"open",
			"print",
			"req",
			"x_firm",
			"vspace",
			"partner.xml",
			"control",
			"image_ids",
			"image_",
			"control",
			"image_",
			"image",
			"image_ids",
			"patient = ",
			"patient",
			"ids",
			"notebook",
			"note",
			"partner",
			"sale_repo",
			"partner_id",
			"almacen",
			"cancel",
			"vendors",
			"purchase.order",
			"rfq_",
			"x_type",
			"create",
			"rfq",
			"purchase.order",
			"alma",
			"openhealth_closing",
			"purchase_form_action",
			"purchase_form_actin",
			"purchase_rfq_",
			"purchase_",
			"partner",
			"rfq",
			"#",
			"action",
			"stree",
			"ruc",
			"street",
			"lang",
			"total",
			"report",
			"caja",
			"security",
			"stock",
			"purchase",
			"purchases",
			"stock",
			"ACIDO HIALURONICO",
			"TREE",
			"true",
			"TREE",
			"TRE",
			"cash",
			"payment_method",
			"cash",
			"ame"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"street",
			"stock.picking",
			"total_tax",
			"total_net",
			"email",
			"my_website",
			"order_line_txt",
			"col-xs-8",
			"col-xs-4",
			"name",
			"par_firm",
			"par_ruc",
			"x_my_company",
			"total_in_words",
			"order_line",
			"par_",
			"pa_address",
			"dni",
			"my_address",
			"my_phone",
			"my_ruc",
			"my_firm",
			"ruc",
			"invoice",
			"confirm",
			"quotation",
			"director",
			"rfq_line_",
			"rfq_line",
			"purchase_order",
			"purchase_po_",
			"purchase_rfq_",
			"purchase_po_",
			"purchase_rfq_",
			"purchase_order",
			"po",
			"",
			"directors",
			"purchases",
			"purchase",
			"vid",
			"vic",
			"mad",
			"mac",
			"din",
			"vid",
			"vic",
			"mad",
			"mac",
			"din",
			"vid",
			"vic",
			"din",
			"vid",
			"vic",
			"mad",
			"mac",
			"din",
			"cuo",
			"ame",
			"cuo",
			"san_",
			"adv_",
			"tkr_",
			"tki_",
			"inv_",
			"x_type",
			"openhealth.closing",
			"openhealth_closing",
			"openhealth.closing",
			"closing",
			"closings",
			"closing",
			"managers",
			"treatments",
			"cosmetologies",
			"cosmetology",
			"stock.warehouse.orderpoint",
			"stock_warehouse_orderpoint",
			"session",
			"energy",
			"patient_",
			"ir.property",
			"ir_property",
			"clinica_chavarri",
			"dr_clinica_chavarri",
			"'staff'",
			"'staff",
			"'staff'",
			"reception",
			"assistants",
			"x_datetime_created",
			"app_p",
			"app_c",
			"physician",
			"caja",
			"reception",
			"director",
			"caja",
			"_physician_line",
			"caja",
			"reception",
			"caja",
			"platform",
			"patient",
			"caja",
			"_ala",
			"menus/menus",
			"vas",
			"mon",
			"gon",
			"esc",
			"can",
			"ala",
			"Dr. Monteverde",
			"Dr. Alarcon",
			"Dr. Vasquez",
			"Dr. Gonzales",
			"Dr. Escudero",
			"Dr. Canales",
			"record",
			"user_id",
			"physician",
			"x_doctor",
			"almacens",
			"staffs",
			"phy",
			"sales_reports_pla_menu"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "__openerp__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9735,
						"regions":
						{
						},
						"selection":
						[
							[
								3235,
								3235
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "models/patient.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19042,
						"regions":
						{
						},
						"selection":
						[
							[
								8054,
								8054
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9341.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "views/patients/patient.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11637,
						"regions":
						{
						},
						"selection":
						[
							[
								5523,
								5523
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3959.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "models/partner.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2205,
						"regions":
						{
						},
						"selection":
						[
							[
								803,
								803
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1037.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "views/partners/partner.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6083,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 33.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "models/howto/shell.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12782,
						"regions":
						{
						},
						"selection":
						[
							[
								3825,
								3916
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "views/menus/menus.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11417,
						"regions":
						{
						},
						"selection":
						[
							[
								9094,
								9094
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "views/orders/order.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30157,
						"regions":
						{
						},
						"selection":
						[
							[
								18932,
								18932
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19672.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "views/sale_documents/payment_methods.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7192,
						"regions":
						{
						},
						"selection":
						[
							[
								1046,
								1046
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 753.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "views/purchase/purchase.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 762,
						"regions":
						{
						},
						"selection":
						[
							[
								139,
								139
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "models/order.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39445,
						"regions":
						{
						},
						"selection":
						[
							[
								428,
								428
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "models/stock_picking.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 440,
						"regions":
						{
						},
						"selection":
						[
							[
								272,
								272
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "models/purchase.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 362,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								362
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "views/sale_documents/receipts.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4764,
						"regions":
						{
						},
						"selection":
						[
							[
								3364,
								3364
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "views/sale_documents/invoices.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1954,
						"regions":
						{
						},
						"selection":
						[
							[
								412,
								495
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 26.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "views/sale_documents/ticket_invoices.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2100,
						"regions":
						{
						},
						"selection":
						[
							[
								899,
								899
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "models/ticket_receipt.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 794,
						"regions":
						{
						},
						"selection":
						[
							[
								149,
								163
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "views/sale_documents/ticket_receipts.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1842,
						"regions":
						{
						},
						"selection":
						[
							[
								243,
								243
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "models/receipt.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 855,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "reports/closing.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2712,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								2712
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 30.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "OpenHealth-MIN.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"p",
				"~/cellar/github/openhealth/models/patient.py"
			],
			[
				"o",
				"~/cellar/github/openhealth/views/orders/order.xml"
			],
			[
				"s",
				"~/cellar/github/openhealth/views/stock/stock.xml"
			],
			[
				"",
				"~/cellar/github/openhealth/models/ticket_receipt.py"
			],
			[
				"m",
				"~/cellar/github/openhealth/views/menus/menus.xml"
			],
			[
				"t",
				"~/cellar/github/openhealth/views/products/product.xml"
			],
			[
				"c",
				"~/cellar/github/openhealth/views/closings/closings.xml"
			],
			[
				"i",
				"~/cellar/github/openhealth/security/ir.model.access.csv"
			],
			[
				"d",
				"~/cellar/github/openhealth/data/base_data_users_managers.xml"
			],
			[
				"h",
				"~/cellar/github/openhealth/models/howto/shell.rb"
			],
			[
				"e",
				"~/cellar/github/openhealth/models/evaluation.py"
			],
			[
				"a",
				"~/cellar/github/openhealth/views/appointments/appointment.xml"
			],
			[
				"_",
				"~/cellar/github/openhealth/__openerp__.py"
			],
			[
				"sa",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/sale_note.py"
			],
			[
				"invoi",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/invoice.py"
			],
			[
				"pr",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/sale_proof.py"
			],
			[
				"r",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/receipt.py"
			],
			[
				"re",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/views/sale_documents/receipts.xml"
			],
			[
				"service_ndy",
				"views/services/service_ndyag.xml"
			],
			[
				"service_ip",
				"views/services/service_ipl.xml"
			],
			[
				"service",
				"views/services/service_excilite.xml"
			],
			[
				"order",
				"views/orders/order.xml"
			],
			[
				"control",
				"views/controls/control.xml"
			],
			[
				"consult",
				"views/consultations/consultation.xml"
			],
			[
				"procedure",
				"views/procedures/procedure.xml"
			],
			[
				"ser",
				"views/services/service_co2.xml"
			],
			[
				"trea",
				"views/treatments/treatment.xml"
			],
			[
				"patient",
				"views/patients/patient.xml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Virtualenvs/Odoo9/odoo/addons/web_calendar/web-calendar.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
