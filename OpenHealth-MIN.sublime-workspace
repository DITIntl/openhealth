{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"end",
				"appointment_end"
			]
		]
	},
	"buffers":
	[
		{
			"file": "__openerp__.py",
			"settings":
			{
				"buffer_size": 7123,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/gibil/cellar/github/openhealth/views/reports/report_sale.xml",
			"settings":
			{
				"buffer_size": 2195,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/gibil/cellar/github/openhealth/views/menus.xml",
			"settings":
			{
				"buffer_size": 13248,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/product.py",
			"settings":
			{
				"buffer_size": 1196,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/products/product.xml",
			"settings":
			{
				"buffer_size": 4682,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/prodvars.py",
			"settings":
			{
				"buffer_size": 6482,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/orders/order.xml",
			"settings":
			{
				"buffer_size": 25004,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/companies/company.xml",
			"settings":
			{
				"buffer_size": 641,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/counters/counter.xml",
			"settings":
			{
				"buffer_size": 2842,
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/order.py",
			"settings":
			{
				"buffer_size": 32872,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/orders/order_line.xml",
			"settings":
			{
				"buffer_size": 4136,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/__init__.py",
			"settings":
			{
				"buffer_size": 1627,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/ord_vars.py",
			"settings":
			{
				"buffer_size": 2358,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"browser",
				"Browse Mode: Right Sidebar"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"python",
				"Build With: Python - Syntax Check"
			],
			[
				"package control:install",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 256.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_cos.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_consult.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_med.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_m22.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_exc.xml",
		"/Users/gibil/cellar/github/openhealth/data/odoo_data_services_co2.xml",
		"/Users/gibil/Virtualenvs/Odoo9-min/odoo/addons/openhealth/data/base_data_users.xml",
		"/Users/gibil/Virtualenvs/Odoo9-min/odoo/addons/openhealth/data/base_data_physicians.xml",
		"/Users/gibil/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/howto/shell.rb",
		"/Users/gibil/cellar/github/openhealth/data/base_data_users.xml",
		"/Users/gibil/cellar/github/openhealth/views/menus.xml",
		"/Users/gibil/cellar/github/openhealth/models/image.py",
		"/Users/gibil/cellar/github/openhealth/models/pat_vars.py",
		"/Users/gibil/cellar/github/openhealth/readme.txt",
		"/Users/gibil/cellar/github/openhealth/models/order_line.py",
		"/Users/gibil/cellar/github/openhealth/models/product.py",
		"/Users/gibil/cellar/github/openhealth/views/products/product.xml",
		"/Users/gibil/cellar/github/openhealth/views/appointments/appointment.xml",
		"/Users/gibil/cellar/github/openhealth/reports/patient.xml",
		"/Users/gibil/cellar/github/openhealth/data/base_data_patients.xml",
		"/Users/gibil/cellar/github/openhealth/data/base_data_physicians.xml",
		"/Users/gibil/Virtualenvs/Odoo9-min/odoo/addons/openhealth/views/patients/patient.xml",
		"/Users/gibil/cellar/github/openhealth/models/ord_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/order.py",
		"/Users/gibil/Virtualenvs/Odoo9-min/odoo/addons/openhealth/data/base_data_patients.xml",
		"/Users/gibil/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/patient.py",
		"/Users/gibil/cellar/github/openhealth/models/consultation.py",
		"/Users/gibil/cellar/github/openhealth/views/controls/control.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure_controls.xml",
		"/Users/gibil/cellar/github/openhealth/models/procedure.py",
		"/Users/gibil/cellar/github/openhealth/models/control.py",
		"/Users/gibil/cellar/github/openhealth/models/session.py",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_med.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure_sessions.xml",
		"/Users/gibil/cellar/github/openhealth/views/images/image_view.xml",
		"/Users/gibil/cellar/github/openhealth/views/reports/patient.xml",
		"/Users/gibil/cellar/github/openhealth/views/reports/patient_consultation.xml",
		"/Users/gibil/cellar/github/openhealth/views/reports/patient_sessions.xml",
		"/Users/gibil/cellar/github/openhealth/views/reports/patient_controls.xml",
		"/Users/gibil/cellar/github/openhealth/models/patient.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment.py",
		"/Users/gibil/cellar/github/openhealth/models/process.py",
		"/Users/gibil/cellar/github/openhealth/models/base.py",
		"/Users/gibil/cellar/github/openhealth/models/evaluation.py",
		"/Users/gibil/cellar/github/openhealth/views/consultations/consultation.xml",
		"/Users/gibil/cellar/github/openhealth/models/app_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/treatment_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/service_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/eval_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/prodvars.py",
		"/Users/gibil/cellar/github/openhealth/models/procedure_funcs.py",
		"/Users/gibil/cellar/github/openhealth/views/reports/old-patient_sessions.xml",
		"/Users/gibil/cellar/github/openhealth/views/reports/old-patient_controls.xml",
		"/Users/gibil/cellar/github/openhealth/models/service.py",
		"/Users/gibil/cellar/github/openhealth/views/example_report.xml",
		"/Users/gibil/cellar/github/openhealth/views/order_report.xml",
		"/Users/gibil/cellar/github/openhealth/models/test.py",
		"/Users/gibil/cellar/github/openhealth/models/session_med.py",
		"/Users/gibil/cellar/github/openhealth/models/procedure_med.py",
		"/Users/gibil/cellar/github/openhealth/models/session_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/consultation_cos.py",
		"/Users/gibil/cellar/github/openhealth/models/cosmetology.py",
		"/Users/gibil/cellar/github/openhealth/models/__init__.py",
		"/Users/gibil/cellar/github/openhealth/views/recommendations/recommendation.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service.xml",
		"/Users/gibil/cellar/github/openhealth/views/services/service_co2.xml",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment_services.xml",
		"/Users/gibil/cellar/github/openhealth/models/service_co2.py",
		"/Users/gibil/cellar/github/openhealth/models/recommendation.py",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment_recommendations.xml",
		"/Users/gibil/cellar/github/openhealth/static/src/css/jx.css",
		"/Users/gibil/cellar/github/openhealth/views/reports/patient_report.xml",
		"/Users/gibil/cellar/github/openhealth/views/treatments/treatment.xml",
		"/Users/gibil/cellar/github/openhealth/views/images/image_full.xml",
		"/Users/gibil/cellar/github/openhealth/models/image_full.py",
		"/Users/gibil/cellar/github/openhealth/views/patients/patient.xml",
		"/Users/gibil/cellar/github/openhealth/views/base.xml",
		"/Users/gibil/cellar/github/openhealth/tests/test_sample.py",
		"/Users/gibil/cellar/github/openhealth/views/orders/order.xml",
		"/Users/gibil/cellar/github/openhealth/tests/test_units.py",
		"/Users/gibil/cellar/github/openhealth/tests/test_selenium.py",
		"/Users/gibil/cellar/github/openhealth/models/howto/shell.rb",
		"/Users/gibil/cellar/github/openhealth/models/service_co2_vars.py",
		"/Users/gibil/cellar/github/openhealth/models/pat_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/service_ndyag.py",
		"/Users/gibil/cellar/github/openhealth/models/service_ipl.py",
		"/Users/gibil/cellar/github/openhealth/models/service_excilite.py",
		"/Users/gibil/cellar/github/openhealth/models/serv_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/service_medical.py",
		"/Users/gibil/cellar/github/openhealth/models/service_funcs.py",
		"/Users/gibil/cellar/github/openhealth/__init__.py",
		"/Users/gibil/cellar/github/openhealth/models/multi_image.py",
		"/Users/gibil/cellar/github/openhealth/models/appointment.py",
		"/Users/gibil/cellar/github/openhealth/views/images/image.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure.xml",
		"/Users/gibil/cellar/github/openhealth/views/sessions/session_configuration.xml",
		"/Users/gibil/cellar/github/openhealth/views/appointments/calendar.xml",
		"/Users/gibil/cellar/github/openhealth/views/sale_documents/payment_methods.xml",
		"/Users/gibil/cellar/github/openhealth/models/payment_method.py",
		"/Users/gibil/cellar/github/openhealth/views/services/service_medical.xml",
		"/Users/gibil/cellar/github/openhealth/views/procedures/procedure_configuration.xml",
		"/Users/gibil/cellar/github/openhealth/models/trash/order.trash.py",
		"/Users/gibil/cellar/github/openhealth/models/service_cosmetology.py",
		"/Users/gibil/cellar/github/openhealth/models/jxvars.py",
		"/Users/gibil/cellar/github/openhealth/models/trash/procedure.trash.py",
		"/Users/gibil/cellar/github/openhealth/models/jrfuncs.py",
		"/Users/gibil/cellar/github/openhealth/models/procedure_funcs_cos.py",
		"/Users/gibil/cellar/github/openhealth/models/cos_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/order.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/procedure_cos.py",
		"/Users/gibil/cellar/github/openhealth/models/sale_document.py",
		"/Users/gibil/cellar/github/openhealth/models/order_funcs.py",
		"/Users/gibil/cellar/github/openhealth/models/pat_funcs.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/mac_funcs.TRASH.py",
		"/Users/gibil/cellar/github/openhealth/models/mac_funcs.py",
		"/Users/gibil/cellar/github/openhealth/tests/__init__.py",
		"/Users/gibil/cellar/github/openhealth/tests_zat/zat/test_partner.py",
		"/Users/gibil/cellar/github/openhealth/tests_zat/zat/test_location.py",
		"/Users/gibil/cellar/github/openhealth/tests_zat/zat/unit_tests.py",
		"/Users/gibil/cellar/github/openhealth/security/openhealth_security.xml",
		"/Users/gibil/cellar/github/openhealth/security/ir.model.access.csv",
		"/Users/gibil/cellar/github/openhealth/tests/unittest/unit_testing.py",
		"/Users/gibil/cellar/github/openhealth/tests/jx/pt.py",
		"/Users/gibil/cellar/github/openhealth/tests/jx/test_unittesting.py",
		"/Users/gibil/cellar/github/openhealth/tests/pytest/test_unittesting.py",
		"/Users/gibil/cellar/github/openhealth/models/appfuncs.py",
		"/Users/gibil/cellar/github/openhealth/tests/unit_tests.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"order",
			"caja",
			"origin",
			"note",
			"comment",
			"TREE",
			"counter",
			"image",
			"tree",
			"alarcon",
			"tree",
			"margin",
			"jx",
			"order_line",
			"noteboo",
			"order_line",
			"margin",
			"Sub-T",
			"jx",
			"price_total",
			"order_line",
			"subto",
			"action_confirm",
			"x_date_created",
			"x_target",
			"comment",
			"kanban",
			"x_target",
			"tree",
			"x_target",
			"('x_target', '=', 'doctor')",
			"x_target",
			"state",
			"tree",
			"state",
			"br",
			"image",
			"name",
			"nr_controls",
			"machine",
			"x_autofill",
			"),",
			"',",
			"('",
			"zone",
			"chief",
			"),",
			"',",
			"('",
			"chief_complaint",
			"zone",
			"anal",
			"Clinica",
			"Medico",
			"Mé",
			"Medico",
			"Clinica",
			"Telefono",
			"Direccion",
			"nh",
			"dic",
			"vspa",
			"consultation",
			"evaluation",
			"cosmet",
			"evaluation",
			"state",
			"test",
			"_dic",
			"fitzpa",
			"nr_image",
			"nr_images",
			"co2",
			"session_ids",
			"evaluation_nr",
			"control_nr",
			"control",
			"control_nr",
			"zone",
			"clear_all",
			"clear_lo",
			"create_recomm",
			"service_co2:q",
			"service_co2",
			"estado",
			"country",
			"date_",
			"image_main",
			"file_db_store",
			"create",
			"name_id",
			"consultation",
			"image",
			"filter",
			"id",
			"search",
			"serv_funcs",
			"jxvars",
			"serv_func",
			"jxvars",
			"search",
			"co2_lb_acneseq",
			"invisible",
			"search",
			"state",
			"name",
			"control",
			"counter",
			"control",
			"image",
			"observation",
			"open_line",
			"button",
			"wid",
			"control",
			"note",
			"control",
			"one2ma",
			"compu",
			"session",
			"acti",
			"machine",
			"treatment",
			"control",
			"evaluation_type",
			"x_type",
			"treatment",
			"create"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"company",
			"pedemonte",
			"acosta",
			"mendez",
			"monteverde",
			"gonzales",
			"escudero",
			"canales",
			"chavarri",
			"vasquez",
			"nr_controls",
			",",
			"':",
			"'",
			",",
			"':",
			"'",
			"Clínica",
			"Médico",
			"Clínica",
			"Teléfono",
			"Dirección",
			"ñ",
			"evaluation_nr",
			"evaluation",
			"image_full",
			"nr_images",
			"image",
			"\\t#print",
			"doctor",
			"product",
			"counter",
			"decrease",
			"counter",
			"70",
			"ticket_invoice",
			"ticket_receipt",
			"sale_note",
			"advertisement",
			"h1",
			"invoice",
			"proof",
			"counter",
			"self",
			"nr_pm",
			"record",
			"x_group",
			"x_age",
			"x_month",
			"x_year",
			"treatment",
			"payment_method",
			"total",
			"order",
			"payment_method",
			"saledoc_code",
			"progress",
			"state",
			"treatment",
			"month",
			"partner",
			"physician",
			"caja",
			"record.x_sale_document.",
			"medical",
			"ndyag",
			"ipl",
			"medical",
			"ndyag",
			"ipl",
			"excilite",
			"payment.method.line",
			"payment_method_line",
			"self",
			"stock.picking",
			"stock_picking",
			"order",
			"standard_price",
			"self.",
			"treatment",
			"recommendation",
			"x_payment_method",
			"",
			"payment_method",
			"product",
			"invoices_pro",
			"budgets_pro",
			"invoice",
			"ticket_invoice",
			"ticket_receipt",
			"sale_note",
			"advertisement",
			"partner_name",
			"doctor_name",
			"x_state",
			":",
			"progress",
			"group",
			"ticket_receipt",
			"ticket_invoice",
			"sale_note",
			"advertisement",
			"invoice",
			"sale_document",
			"proof",
			"receipt",
			"ticket_invoice",
			"ticket_receipt",
			"sale_note",
			"ticket_receipt",
			"ticket_invoice",
			"advertisement",
			"plataforma",
			"caja",
			"medico",
			"pruebas",
			"consu",
			">consumable<",
			"product",
			"pbalboa",
			"dgrafico",
			"marketing",
			"ipuga",
			"lang",
			"",
			"vmori",
			"group",
			"JX"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "__openerp__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7123,
						"regions":
						{
						},
						"selection":
						[
							[
								1527,
								1527
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1206.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/gibil/cellar/github/openhealth/views/reports/report_sale.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2195,
						"regions":
						{
						},
						"selection":
						[
							[
								1668,
								1668
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/gibil/cellar/github/openhealth/views/menus.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13248,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								40
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "models/product.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1196,
						"regions":
						{
						},
						"selection":
						[
							[
								663,
								668
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 446.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "views/products/product.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4682,
						"regions":
						{
						},
						"selection":
						[
							[
								4661,
								4681
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3341.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "models/prodvars.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6482,
						"regions":
						{
						},
						"selection":
						[
							[
								678,
								678
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 854.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "views/orders/order.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25004,
						"regions":
						{
						},
						"selection":
						[
							[
								17237,
								17237
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18491.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "views/companies/company.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 641,
						"regions":
						{
						},
						"selection":
						[
							[
								374,
								374
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "views/counters/counter.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2842,
						"regions":
						{
						},
						"selection":
						[
							[
								2121,
								2841
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2116.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "models/order.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32872,
						"regions":
						{
						},
						"selection":
						[
							[
								406,
								406
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "views/orders/order_line.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4136,
						"regions":
						{
						},
						"selection":
						[
							[
								3352,
								3352
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2333.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "models/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1627,
						"regions":
						{
						},
						"selection":
						[
							[
								934,
								934
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 973.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "models/ord_vars.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2358,
						"regions":
						{
						},
						"selection":
						[
							[
								1217,
								1217
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 27.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "OpenHealth-MIN.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"p",
				"~/cellar/github/openhealth/models/pat_vars.py"
			],
			[
				"",
				"~/cellar/github/openhealth/models/prodvars.py"
			],
			[
				"c",
				"~/cellar/github/openhealth/models/consultation.py"
			],
			[
				"t",
				"~/cellar/github/openhealth/models/treatment_vars.py"
			],
			[
				"s",
				"~/cellar/github/openhealth/models/session_med.py"
			],
			[
				"e",
				"~/cellar/github/openhealth/models/evaluation.py"
			],
			[
				"a",
				"~/cellar/github/openhealth/views/appointments/appointment.xml"
			],
			[
				"_",
				"~/cellar/github/openhealth/__openerp__.py"
			],
			[
				"o",
				"~/cellar/github/openhealth/models/order_line.py"
			],
			[
				"sa",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/sale_note.py"
			],
			[
				"invoi",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/invoice.py"
			],
			[
				"pr",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/sale_proof.py"
			],
			[
				"r",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/models/receipt.py"
			],
			[
				"re",
				"~/Virtualenvs/Odoo9-min/odoo/addons/openhealth/views/sale_documents/receipts.xml"
			],
			[
				"service_ndy",
				"views/services/service_ndyag.xml"
			],
			[
				"service_ip",
				"views/services/service_ipl.xml"
			],
			[
				"service",
				"views/services/service_excilite.xml"
			],
			[
				"order",
				"views/orders/order.xml"
			],
			[
				"control",
				"views/controls/control.xml"
			],
			[
				"consult",
				"views/consultations/consultation.xml"
			],
			[
				"procedure",
				"views/procedures/procedure.xml"
			],
			[
				"ser",
				"views/services/service_co2.xml"
			],
			[
				"trea",
				"views/treatments/treatment.xml"
			],
			[
				"patient",
				"views/patients/patient.xml"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/Aptana Studio 3 Workspace/vipassana/vipassana_mac/vipassana.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
